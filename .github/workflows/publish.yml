name: Grid Publish
on: [workflow_dispatch]

env:
  WORKING_DIRECTORY: ./packages/toast-ui.grid
  CACHED_DEPENDENCY_PATHS: ./packages/toast-ui.grid/node_modules
  CACHED_BUILD_PATHS: ./packages/toast-ui.grid/dist
  BUILD_CACHE_KEY: ${{ github.sha }}

jobs:
  check-version:
    name: Check package version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check package version
        id: check
        uses: PostHog/check-package-version@v2
        with:
          path: ${{ env.WORKING_DIRECTORY }}/
      - name: Log when unchanged
        if: steps.check.outputs.is-new-version == 'false'
        run: 'echo "No version change"'
      - name: Cancel Workflow
        if: steps.check.outputs.is-new-version == 'false'
        uses: andymckay/cancel-action@0.2
    
  install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v1
      - name: Compute dependency cache key
        working-directory: ${{ env.WORKING_DIRECTORY }}
        id: compute_lockfile_hash
        run: echo "::set-output name=hash::${{ hashFiles('package-lock.json') }}"
      - name: Check dependency cache
        uses: actions/cache@v2
        id: cache_dependencies
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: npm install
    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}

  build:
    name: Build
    needs: [install_dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v1
      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.install_dependencies.outputs.dependency_cache_key }}
      - name: Check build cache
        uses: actions/cache@v2
        id: cache_built_packages
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}
      - name: Build packages
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: steps.cache_built_packages.outputs.cache-hit == ''
        run: npm run build
    outputs:
      dependency_cache_key: ${{ needs.install_dependencies.outputs.dependency_cache_key }}

  push-tag:
    needs: [check-version, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Get package version
        id: version
        uses: PostHog/check-package-version@v2
        with:
          path: ${{ env.WORKING_DIRECTORY }}/
      - name: Create Tag
        run: |
          git config --local user.email "jajugoguma@gmail.com"
          git config --local user.name "jajugoguma"
          git tag v${{ steps.version.outputs.committed-version }}
      - name: Push changes
        run: |
          git push origin v${{ steps.version.outputs.committed-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      dependency_cache_key: ${{ needs.build.outputs.dependency_cache_key }}

  publish-docs:
    needs: [push-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Get package version
        id: version
        uses: PostHog/check-package-version@v2
        with:
          path: ${{ env.WORKING_DIRECTORY }}/
      - name: npm install
        run: |
          npm ci
          npm i -g @toast-ui/doc
      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.push-tag.outputs.dependency_cache_key }}
      - name: Run doc
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          npm run doc
          mv _${{ steps.version.outputs.committed-version }} ../../${{ steps.version.outputs.committed-version }}
          mv -i _latest ../../latest
          rm -rf tmpdoc
          git stash --include-untracked
      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Commit files
        run: |
          git config --local user.email "jajugoguma@gmail.com"
          git config --local user.name "jajugoguma"
          rm -rf latest
          git stash pop
          git add .
          git commit -m "${{ steps.version.outputs.committed-version }}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages

  publish-package:
    needs: [push-tag]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: npm install
        run: npm ci
      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.push-tag.outputs.dependency_cache_key }}
      - name: Check build cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}
      - name: Publish
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
    outputs:
      dependency_cache_key: ${{ needs.push-tag.outputs.dependency_cache_key }}

  publish-cdn:
    needs: [publish-package]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: npm install
        run: npm ci
      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.publish-package.outputs.dependency_cache_key }}
      - name: Check build cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}
      - name: Upload files to CDN
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          npm run publish:cdn
        env:
          TOAST_CLOUD_TENENTID: ${{ secrets.TOAST_CLOUD_TENENTID }}
          TOAST_CLOUD_STORAGEID: ${{ secrets.TOAST_CLOUD_STORAGEID }}
          TOAST_CLOUD_USERNAME: ${{ secrets.TOAST_CLOUD_USERNAME }}
          TOAST_CLOUD_PASSWORD: ${{ secrets.TOAST_CLOUD_PASSWORD }}
